{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Throw out pop-ups confirming the submission of form! A useful zero-dependencies , less than 450 Bytes (gzipped), pure JavaScript & CSS solution for drop an annoying pop-ups confirming the submission of form in your web apps. Developers Idea and active development by Vic Sh\u00f3stak (aka Koddr). Project assistance If you want to say \u00abthank you\u00bb or/and support active development SweetConfirm.js : Add a GitHub Star to project. Twit about project on your Twitter . Donate some money to project author via PayPal: @paypal.me/koddr . Join DigitalOcean at our referral link (your profit is $100 and we get $25). Thanks for your support! \ud83d\ude18 Together, we make this project better every day. License MIT","title":"Get started"},{"location":"#developers","text":"Idea and active development by Vic Sh\u00f3stak (aka Koddr).","title":"Developers"},{"location":"#project-assistance","text":"If you want to say \u00abthank you\u00bb or/and support active development SweetConfirm.js : Add a GitHub Star to project. Twit about project on your Twitter . Donate some money to project author via PayPal: @paypal.me/koddr . Join DigitalOcean at our referral link (your profit is $100 and we get $25). Thanks for your support! \ud83d\ude18 Together, we make this project better every day.","title":"Project assistance"},{"location":"#license","text":"MIT","title":"License"},{"location":"basic-usage/","text":"Basic usage Let's start with HTML page and some CSS styles for submit button ( ./index.html ): 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 <!DOCTYPE html> < html lang = \"en\" > < head > < meta charset = \"UTF-8\" /> < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" /> < meta http-equiv = \"X-UA-Compatible\" content = \"ie=edge\" /> < title > Document </ title > < style > button { display : block ; border-radius : 30 px ; cursor : pointer ; } </ style > </ head > < body > < button type = \"submit\" id = \"button\" > \ud83d\udcac Push the button! </ button > < script src = \"./script.js\" ></ script > </ body > </ html > Next, time for JavaScript ( ./script.js ): 1 2 3 4 5 6 7 8 9 import { SweetConfirm } from \"sweetconfirm.js\" ; // Define element (button) var button = document . getElementById ( \"button\" ); // Init SweetConfirm.js to element with callback new SweetConfirm ( button , () => { console . log ( \"This is fake data!\" ); });","title":"Basic usage"},{"location":"basic-usage/#basic-usage","text":"Let's start with HTML page and some CSS styles for submit button ( ./index.html ): 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 <!DOCTYPE html> < html lang = \"en\" > < head > < meta charset = \"UTF-8\" /> < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" /> < meta http-equiv = \"X-UA-Compatible\" content = \"ie=edge\" /> < title > Document </ title > < style > button { display : block ; border-radius : 30 px ; cursor : pointer ; } </ style > </ head > < body > < button type = \"submit\" id = \"button\" > \ud83d\udcac Push the button! </ button > < script src = \"./script.js\" ></ script > </ body > </ html > Next, time for JavaScript ( ./script.js ): 1 2 3 4 5 6 7 8 9 import { SweetConfirm } from \"sweetconfirm.js\" ; // Define element (button) var button = document . getElementById ( \"button\" ); // Init SweetConfirm.js to element with callback new SweetConfirm ( button , () => { console . log ( \"This is fake data!\" ); });","title":"Basic usage"},{"location":"cdn-usage/","text":"Use via CDN Similar to npm way, but easily (all-in-one ./index.html file): 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 <!DOCTYPE html> < html lang = \"en\" > < head > <!-- ... --> </ head > < body > < button type = \"submit\" id = \"button\" > \ud83d\udcac Push the button! </ button > < div id = \"message\" ></ div > < script src = \"https://cdn.jsdelivr.net/npm/sweetconfirm.js@0/sweetconfirm.min.js\" ></ script > < script > // Define vars var button , message ; button = document . getElementById ( \"button\" ); message = document . getElementById ( \"message\" ); // Callback function function showMessage ( element , text ) { element . innerText = text ; } // Init SweetConfirm.js new SweetConfirm ( button , () => { showMessage ( message , \"OK! Refresh page for try again.\" ); }); </ script > </ body > </ html >","title":"CDN usage"},{"location":"cdn-usage/#use-via-cdn","text":"Similar to npm way, but easily (all-in-one ./index.html file): 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 <!DOCTYPE html> < html lang = \"en\" > < head > <!-- ... --> </ head > < body > < button type = \"submit\" id = \"button\" > \ud83d\udcac Push the button! </ button > < div id = \"message\" ></ div > < script src = \"https://cdn.jsdelivr.net/npm/sweetconfirm.js@0/sweetconfirm.min.js\" ></ script > < script > // Define vars var button , message ; button = document . getElementById ( \"button\" ); message = document . getElementById ( \"message\" ); // Callback function function showMessage ( element , text ) { element . innerText = text ; } // Init SweetConfirm.js new SweetConfirm ( button , () => { showMessage ( message , \"OK! Refresh page for try again.\" ); }); </ script > </ body > </ html >","title":"Use via CDN"},{"location":"demo-on-localhost/","text":"Demo on localhost You may serve downloaded repository by simple Python 3 CLI snippet (for macOS/Linux/Windows WSL). First, clone repository: 1 2 foo@bar:~$ git clone https://github.com/koddr/sweetconfirm.js.git foo@bar:~$ cd sweetconfirm.js Let's serve it: 1 foo@bar:~$ python3 -m http.server 8080 --bind 127 .0.0.1 And now, go to browser to see SweetConfirm.js Example page: 1 2 3 4 5 # 01_simple.html http://127.0.0.1:8080/examples/01_simple.html # 02_fetch.html http://127.0.0.1:8080/examples/02_fetch.html","title":"Demo on localhost"},{"location":"demo-on-localhost/#demo-on-localhost","text":"You may serve downloaded repository by simple Python 3 CLI snippet (for macOS/Linux/Windows WSL). First, clone repository: 1 2 foo@bar:~$ git clone https://github.com/koddr/sweetconfirm.js.git foo@bar:~$ cd sweetconfirm.js Let's serve it: 1 foo@bar:~$ python3 -m http.server 8080 --bind 127 .0.0.1 And now, go to browser to see SweetConfirm.js Example page: 1 2 3 4 5 # 01_simple.html http://127.0.0.1:8080/examples/01_simple.html # 02_fetch.html http://127.0.0.1:8080/examples/02_fetch.html","title":"Demo on localhost"},{"location":"installation/","text":"Installation Simple install to your project via npm : 1 foo@bar:~$ npm install --save sweetconfirm.js Or include to your html page from fast CDN jsDelivr : 1 < script src = \"https://cdn.jsdelivr.net/npm/sweetconfirm.js@0/sweetconfirm.min.js\" ></ script >","title":"Installation"},{"location":"installation/#installation","text":"Simple install to your project via npm : 1 foo@bar:~$ npm install --save sweetconfirm.js Or include to your html page from fast CDN jsDelivr : 1 < script src = \"https://cdn.jsdelivr.net/npm/sweetconfirm.js@0/sweetconfirm.min.js\" ></ script >","title":"Installation"},{"location":"options/","text":"Options 1 function SweetConfirm ( element, function () {...}, [options, ...] ) Option Description Default value bg Background color for initial state, usually equal to gradient.from_color #0f4c81 bgSize Size of background ; for better effect must be greater than 100% at the first value 215% 100% bgPositionIn Background position for init animation right bottom bgPositionOut Background position for end animation left bottom trans.init Enabled initial transition when page is loaded ( DOMContentLoaded event) true trans.in A transition speed in seconds for DOMContentLoaded event 0.5 trans.out A transition speed in seconds for mouseup event 0.5 gradient.deg Angle or position of the gradient line's starting point 135deg gradient.from_color From (start) color #0f4c81 50% gradient.to_color To (stop, end) color #fa7268 50% question Message during holding mouse/key button on element \ud83e\udd14 Are you sure? success.message Message after callback function \ud83d\udc4d Success! success.color Color of success message #00b16a timeout Time for setTimeout() function in miliseconds; this option also define a transition speed 3000 Define your own options 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 // Define options var options = { bg : \"#0f4c81\" , bgSize : \"215% 100%\" , bgPositionIn : \"right bottom\" , bgPositionOut : \"left bottom\" , trans : { init : true , in : 0.5 , out : 0.5 }, gradient : { deg : \"135deg\" , from_color : \"#0f4c81 50%\" , to_color : \"#fa7268 50%\" }, question : \"\ud83e\udd14 Are you sure?\" , success : { message : \"\ud83d\udc4d Success!\" , color : \"#00b16a\" }, timeout : 3000 }; // Init SweetConfirm.js with options new SweetConfirm ( element , () => {}, options );","title":"Options"},{"location":"options/#options","text":"1 function SweetConfirm ( element, function () {...}, [options, ...] ) Option Description Default value bg Background color for initial state, usually equal to gradient.from_color #0f4c81 bgSize Size of background ; for better effect must be greater than 100% at the first value 215% 100% bgPositionIn Background position for init animation right bottom bgPositionOut Background position for end animation left bottom trans.init Enabled initial transition when page is loaded ( DOMContentLoaded event) true trans.in A transition speed in seconds for DOMContentLoaded event 0.5 trans.out A transition speed in seconds for mouseup event 0.5 gradient.deg Angle or position of the gradient line's starting point 135deg gradient.from_color From (start) color #0f4c81 50% gradient.to_color To (stop, end) color #fa7268 50% question Message during holding mouse/key button on element \ud83e\udd14 Are you sure? success.message Message after callback function \ud83d\udc4d Success! success.color Color of success message #00b16a timeout Time for setTimeout() function in miliseconds; this option also define a transition speed 3000","title":"Options"},{"location":"options/#define-your-own-options","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 // Define options var options = { bg : \"#0f4c81\" , bgSize : \"215% 100%\" , bgPositionIn : \"right bottom\" , bgPositionOut : \"left bottom\" , trans : { init : true , in : 0.5 , out : 0.5 }, gradient : { deg : \"135deg\" , from_color : \"#0f4c81 50%\" , to_color : \"#fa7268 50%\" }, question : \"\ud83e\udd14 Are you sure?\" , success : { message : \"\ud83d\udc4d Success!\" , color : \"#00b16a\" }, timeout : 3000 }; // Init SweetConfirm.js with options new SweetConfirm ( element , () => {}, options );","title":"Define your own options"},{"location":"size-limit-report/","text":"Size-limit report 1 2 3 4 5 6 7 foo@bar:~$ npm run size Time limit: 70 ms Size: 444 B with all dependencies, minified and gzipped Loading time: 10 ms on slow 3G Running time: 58 ms on Snapdragon 410 Total time: 68 ms Thanks to Andrey Sitnik @ai/size-limit .","title":"Size-limit report"},{"location":"size-limit-report/#size-limit-report","text":"1 2 3 4 5 6 7 foo@bar:~$ npm run size Time limit: 70 ms Size: 444 B with all dependencies, minified and gzipped Loading time: 10 ms on slow 3G Running time: 58 ms on Snapdragon 410 Total time: 68 ms Thanks to Andrey Sitnik @ai/size-limit .","title":"Size-limit report"}]}